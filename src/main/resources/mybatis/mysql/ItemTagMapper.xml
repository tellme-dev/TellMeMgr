<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hotel.dao.ItemTagMapper">
  <resultMap id="BaseResultMap" type="com.hotel.model.ItemTag">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="level" jdbcType="TINYINT" property="level" />
    <result column="is_leaf" jdbcType="BIT" property="isLeaf" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="tag_type" jdbcType="INTEGER" property="tagType" />
  </resultMap>
  <sql id="Base_Column_List">
    t.id, t.parent_id, t.level, t.is_leaf, t.path, t.name, t.note, t.tag_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_Item_tag t
    where t.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_Item_tag
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hotel.model.ItemTag">
    insert into t_Item_tag (id, parent_id, level, 
      is_leaf, path, name, note, 
      tag_type)
    values (#{id,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{level,jdbcType=TINYINT}, 
      #{isLeaf,jdbcType=BIT}, #{path,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, 
      #{tagType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hotel.model.ItemTag">
    insert into t_Item_tag
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="isLeaf != null">
        is_leaf,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="tagType != null">
        tag_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=TINYINT},
      </if>
      <if test="isLeaf != null">
        #{isLeaf,jdbcType=BIT},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="tagType != null">
        #{tagType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hotel.model.ItemTag">
    update t_Item_tag
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=TINYINT},
      </if>
      <if test="isLeaf != null">
        is_leaf = #{isLeaf,jdbcType=BIT},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="tagType != null">
        tag_type = #{tagType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hotel.model.ItemTag">
    update t_Item_tag
    set parent_id = #{parentId,jdbcType=INTEGER},
      level = #{level,jdbcType=TINYINT},
      is_leaf = #{isLeaf,jdbcType=BIT},
      path = #{path,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      tag_type = #{tagType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectTagByTagType" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_Item_tag t
    where t.tag_type = #{tagType,jdbcType=INTEGER}
  </select>
  <select id="selectTagList" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from t_Item_tag t
  </select>
  
  <select id="getTagFromMin" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_Item_tag t
    where t.tag_type >= #{tagType,jdbcType=INTEGER}
  </select>
</mapper>