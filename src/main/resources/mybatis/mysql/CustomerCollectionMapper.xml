<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hotel.dao.CustomerCollectionMapper" >
  <resultMap id="BaseResultMap" type="com.hotel.model.CustomerCollection" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="collection_type" property="collectionType" jdbcType="INTEGER" />
    <result column="target_id" property="targetId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="deleted_time" property="deletedTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, customer_id, collection_type, target_id, create_time, deleted_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_customer_collection
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_customer_collection
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hotel.model.CustomerCollection" >
    insert into t_customer_collection (id, customer_id, collection_type, 
      target_id, create_time, deleted_time
      )
    values (#{id,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, #{collectionType,jdbcType=INTEGER}, 
      #{targetId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{deletedTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hotel.model.CustomerCollection" >
    insert into t_customer_collection
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="collectionType != null" >
        collection_type,
      </if>
      <if test="targetId != null" >
        target_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="deletedTime != null" >
        deleted_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="collectionType != null" >
        #{collectionType,jdbcType=INTEGER},
      </if>
      <if test="targetId != null" >
        #{targetId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedTime != null" >
        #{deletedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hotel.model.CustomerCollection" >
    update t_customer_collection
    <set >
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="collectionType != null" >
        collection_type = #{collectionType,jdbcType=INTEGER},
      </if>
      <if test="targetId != null" >
        target_id = #{targetId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedTime != null" >
        deleted_time = #{deletedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hotel.model.CustomerCollection" >
    update t_customer_collection
    set customer_id = #{customerId,jdbcType=INTEGER},
      collection_type = #{collectionType,jdbcType=INTEGER},
      target_id = #{targetId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      deleted_time = #{deletedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="countByItemId" resultType="java.lang.Integer">
    select count(id) from t_customer_collection where collection_type = 1 and 
    target_id = #{itemId,jdbcType=INTEGER}
  </select>
  
  <select id="countByCustomerCollection" resultType="java.lang.Integer" parameterType="com.hotel.model.CustomerCollection" >
    select count(id) 
    from t_customer_collection
    where customer_id = #{customerId,jdbcType=INTEGER} and collection_type = #{collectionType,jdbcType=INTEGER} and target_id = #{targetId,jdbcType=INTEGER}
  </select>
  
  <select id="countByCustomer" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select count(id) 
    from t_customer_collection
    where customer_id = #{customerId,jdbcType=INTEGER} and deleted_time is null
  </select>
  <select id="getPageCollectionByCustomer" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from t_customer_collection
    where customer_id = #{customerId,jdbcType=INTEGER} and deleted_time is null order by create_time desc 
    <if test="pageStart != null and pageSize != null and pageStart>-1 and pageSize>-1">
    	limit #{pageStart}, #{pageSize}
    </if>
  </select>
  <update id="deleteByItem" parameterType="java.lang.Integer" >
    update t_customer_collection
    set deleted_time = NOW()
    where collection_type = 1 and target_id = #{targetId,jdbcType=INTEGER}
  </update>
  
</mapper>