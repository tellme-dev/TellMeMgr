<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hotel.dao.HotelMapper" >
  <resultMap id="BaseResultMap" type="com.hotel.model.Hotel" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="logo" property="logo" jdbcType="VARCHAR" />
    <result column="text" property="text" jdbcType="VARCHAR" />
    <result column="region_id" property="regionId" jdbcType="INTEGER" />
    <result column="longitude" property="longitude" jdbcType="DECIMAL" />
    <result column="latitude" property="latitude" jdbcType="DECIMAL" />
  </resultMap>
    <resultMap id="resultHotelVMMap" type="com.hotel.modelVM.HotelVM" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="text" property="text" jdbcType="VARCHAR" />
    <result column="region_id" property="regionId" jdbcType="INTEGER" />
    <result column="longitude" property="longitude" jdbcType="DECIMAL" />
    <result column="latitude" property="latitude" jdbcType="DECIMAL" />
    <collection property="itemVMs" column="id" select="com.hotel.dao.ItemMapper.selectItemVMByHotelId"></collection>
  </resultMap>
  <resultMap id="resultHotelParamMap" type="com.hotel.modelVM.HotelParam">
  <id column="id" property="id" jdbcType="INTEGER" />
  <result column="hotel_id" property="hotelId" jdbcType="INTEGER" />
  <result column="name" property="name" jdbcType="VARCHAR" />
  <result column="score" property="score" jdbcType="DECIMAL" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, name, logo, text, region_id, longitude, latitude
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_hotle
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getHotelVMById" resultMap="resultHotelVMMap"  parameterType="java.lang.Integer" >
  	select *
  	from t_hotle
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_hotle
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hotel.model.Hotel" >
    insert into t_hotle (id, name, logo, text, 
      region_id, longitude, latitude
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{logo,jdbcType=VARCHAR}, #{text,jdbcType=VARCHAR}, 
      #{regionId,jdbcType=INTEGER}, #{longitude,jdbcType=DECIMAL}, #{latitude,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hotel.model.Hotel" >
    insert into t_hotle
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="text != null" >
        text,
      </if>
      <if test="regionId != null" >
        region_id,
      </if>
      <if test="longitude != null" >
        longitude,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="text != null" >
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="regionId != null" >
        #{regionId,jdbcType=INTEGER},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hotel.model.Hotel" >
    update t_hotle
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="logo != null" >
        logo = #{logo,jdbcType=VARCHAR},
      </if>
      <if test="text != null" >
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="regionId != null" >
        region_id = #{regionId,jdbcType=INTEGER},
      </if>
      <if test="longitude != null" >
        longitude = #{longitude,jdbcType=DECIMAL},
      </if>
      <if test="latitude != null" >
        latitude = #{latitude,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hotel.model.Hotel" >
    update t_hotle
    set name = #{name,jdbcType=VARCHAR},
      logo = #{logo,jdbcType=VARCHAR},
      text = #{text,jdbcType=VARCHAR},
      region_id = #{regionId,jdbcType=INTEGER},
      longitude = #{longitude,jdbcType=DECIMAL},
      latitude = #{latitude,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="query_sql">
      <if test="id != null" >
        and h.id #{id,jdbcType=INTEGER}
      </if>
      <if test="name != null" >
        and h.name = #{name,jdbcType=VARCHAR}
      </if>
      <if test="text != null" >
        and h.text = #{text,jdbcType=VARCHAR}
      </if>
      <if test="regionId != null" >
        and h.region_id = #{regionId,jdbcType=INTEGER}
      </if>
      <if test="longitude != null" >
        and h.longitude = #{longitude,jdbcType=DECIMAL}
      </if>
      <if test="latitude != null" >
        and h.latitude = #{latitude,jdbcType=DECIMAL}
      </if>
      
      <if test="adId != null" >
        and a.id = #{adId,jdbcType=INTEGER}
      </if>
  </sql>
  
  <select id="selectHotelList" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from t_hotle 
  </select>
  
  <select id="getPageHotel" resultMap="BaseResultMap" parameterType="com.hotel.model.Hotel">
     select 
     <include refid="Base_Column_List" />
     from t_hotle
     <if test="pageStart != null and pageSize != null and pageStart>-1 and pageSize>-1">
        limit #{pageStart}, #{pageSize}
     </if>
  </select>
  <select id="getPageHotelCount" resultType="java.lang.Integer">
    select count(id) from t_hotle
  </select>
  <select id="getHotelVMByMap" resultMap="resultHotelVMMap"  parameterType="java.util.Map" >
  	select *
  	from t_hotle h
  	left join t_ad a on a.target_id = h.id
  	where 1=1 <include refid="query_sql" />
  </select>
  <delete id="deleteByHotelId" parameterType="java.util.HashMap" >
    delete from t_hotle
    where id in 
    <foreach item="item" collection="idList" open="(" separator="," close=")">  
    	#{item.id}  
    </foreach>
  </delete>
  <select id="getPageHotelByItemTag" resultMap="BaseResultMap" parameterType="java.util.Map">
     select 
     <include refid="Base_Column_List" />
     from t_hotle 
     where id in (select distinct hotel_id from t_item where id in (select item_id from t_item_tag_association where item_tag_id in (select id from t_Item_tag where parent_id = #{itemTagId})) order by score desc)
     <if test="pageStart != null and pageSize != null and pageStart>-1 and pageSize>-1">
        limit #{pageStart}, #{pageSize}
     </if>
  </select>
  <select id="getPageHotelCountByItemTag" resultType="java.lang.Integer">
    select count(id) from t_hotle where id in (select distinct hotel_id from t_item where id in (select item_id from t_item_tag_association where item_tag_id in (select id from t_Item_tag where parent_id = #{itemTagId})))
  </select>
  
  <select id="getPageHotelByCustomer" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from t_hotle 
    where id in (select distinct hotel_id from t_room_check where customer_id = #{customerId,jdbcType=INTEGER}) 
    <if test="pageStart != null and pageSize != null and pageStart>-1 and pageSize>-1">
        limit #{pageStart}, #{pageSize}
     </if>
  </select>
  
  <select id="selectPageHotelOrderInId" parameterType="java.util.HashMap" >
    delete from t_hotle
    where id in 
    <foreach item="item" collection="idList" open="(" separator="," close=")">  
    	#{item.id}  
    </foreach>
    order by FIND_IN_SET(id, 
    <foreach item="item" collection="idList" open="'" separator="," close="'">  
    	#{item.id}  
    </foreach>
    )
    <if test="pageStart != null and pageSize != null and pageStart>-1 and pageSize>-1">
        limit #{pageStart}, #{pageSize}
     </if>
  </select>
  
  <select id="getRecommandHotelListOfSQL" resultMap="resultHotelParamMap" parameterType="java.lang.Integer">
  	SELECT a.id as id ,e.id as hotel_id,e.`name` as name, a.score as score from t_item a
		LEFT JOIN t_item_tag_association b ON a.id = b.item_id
		LEFT JOIN t_Item_tag c ON b.item_tag_id = c.id
		LEFT JOIN t_item_detail d on a.id = d.item_id
		LEFT JOIN t_hotle e on a.hotel_id = e.id
		WHERE c.id = 62
		GROUP BY a.hotel_id
		ORDER BY a.score DESC
		LIMIT 0,#{0};
  </select>
  <select id="fullTextSearchOfHotel" resultMap="resultHotelParamMap" parameterType="java.lang.String">
  SELECT a.id as hotel_id,b.id as id,a.name as name,b.score as score from t_hotle a
	LEFT JOIN t_item b on a.id = b.hotel_id
	LEFT JOIN t_item_tag_association c on b.id = c.item_id
	LEFT JOIN t_Item_tag d on  c.item_tag_id = d.id
	WHERE instr(a.name,#{0})>0 or instr(a.text,#{0})>0 and d.id = 1
	ORDER BY b.score DESC
	LIMIT 0,5;
  </select>
  
  <select id="countByMap" resultType="java.lang.Integer" parameterType="java.util.Map">
    select count(*)
    from t_hotle h 
    where 1=1
    <if test="regionId != null" >
        and h.region_id = #{regionId,jdbcType=INTEGER}
    </if>
  </select>
  
  <select id="selectHotelListByMap" resultMap="resultHotelVMMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from t_hotle h
    where 1=1 
    <if test="regionId != null" >
        and h.region_id = #{regionId,jdbcType=INTEGER}
    </if>
  </select>
</mapper>
